services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - talkbaro-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://43.201.113.223:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - talkbaro-network

  mysql:
    image: mysql:8
    container_name: mysql-container
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - talkbaro-network

  mongodb:
    image: mongo:8
    container_name: mongodb-container
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
    networks:
      - talkbaro-network
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-container
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=mysql-container
      - MONGO_HOST=mongodb-container
      - KAFKA_HOST=kafka:9092
    depends_on:
      - mysql
      - mongodb
      - kafka
    networks:
      - talkbaro-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-container
    restart: always
    volumes:
      - frontend_dist:/app/dist
    networks:
      - talkbaro-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-container
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_dist:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/talkbaro.duckdns.org/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/talkbaro.duckdns.org/privkey.pem:/etc/ssl/private/privkey.pem:ro
    depends_on:
      - frontend
    networks:
      - talkbaro-network

volumes:
  mysql_data:
    external: true
  mongodb_data:
    external: true
  kafka_data:
    external: true
  zookeeper_data:
    external: true
  frontend_dist:

networks:
  talkbaro-network:
    driver: bridge