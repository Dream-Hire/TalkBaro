name: Deploy to EC2
on:
  push:
    branches: [ main, develop ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # SSH로 서버 접속 및 배포
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        debug: true
        script: |
          set -e  # 에러 발생시 스크립트 중단
          
          echo "🚀 Starting deployment..."
          
          # 프로젝트 디렉토리로 이동
          cd ~/TalkBaro
          
          # 최신 코드 pull
          git pull origin develop
          
          # DB 및 인프라 서비스 먼저 실행 (이미 실행 중이면 그대로 유지)
          docker compose up -d mysql mongodb kafka zookeeper
          
          # 변경사항 확인 및 필요한 서비스만 재빌드
          echo "🔍 Checking for changes..."
          CHANGED_FILES=$(git diff HEAD~1 --name-only)
          
          if echo "$CHANGED_FILES" | grep -q "frontend/"; then
            echo "🎨 Frontend changes detected - rebuilding frontend..."
            docker compose up -d --build frontend
          fi
          
          if echo "$CHANGED_FILES" | grep -q "backend/"; then
            echo "⚡ Backend changes detected - rebuilding backend..."
            docker compose up -d --build backend
          fi
          
          if echo "$CHANGED_FILES" | grep -q "nginx/"; then
            echo "🌐 Nginx config changes detected - restarting nginx..."
            docker compose up -d nginx
          fi
          
          # 변경사항이 없거나 기타 파일 변경시 전체 애플리케이션 재시작
          if ! echo "$CHANGED_FILES" | grep -qE "(frontend/|backend/|nginx/)"; then
            echo "📦 Other changes detected - rebuilding all application services..."
            docker compose up -d --build backend frontend nginx
          fi
          
          # 사용하지 않는 이미지 정리
          docker image prune -f

    # 배포 성공 알림
    - name: Deployment Success
      if: success()
      run: |
        echo "✅ Deployment to EC2 completed successfully!"

    # 배포 실패 알림 및 로그
    - name: Deployment Failed
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs above for error details"
        exit 1
